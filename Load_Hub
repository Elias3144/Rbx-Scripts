
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v69=v2(v0(v20,16));if v19 then local v78=v5(v69,v19);v19=nil;return v78;else return v69;end end end);local function v21(v22,v23,v24)if v24 then local v70=0 -0 ;local v71;while true do if (v70==(0 + (0 -0))) then v71=(v22/((3 -1)^(v23-(1 -0))))%(((156 + 414) -(33 + 535))^(((v24-((1 -0) -(701 -(653 + 48)))) -(v23-(1 + 0))) + (4 -3))) ;return v71-(v71%(3 -2)) ;end end else local v72=1645 -(1223 + 422) ;local v73;while true do if (v72==(0 -0)) then v73=(8 -6)^(v23-(830 -(708 + 121))) ;return (((v22%(v73 + v73))>=v73) and (364 -(312 + 51))) or (0 -0) ;end end end end local function v25()local v38=0 + 0 ;local v39;while true do if ((925 -(191 + 734))==v38) then v39=v1(v16,v18,v18);v18=v18 + (1 -0) ;v38=1936 -(1523 + 412) ;end if (v38==(2 -1)) then return v39;end end end local function v26()local v40=0 -0 ;local v41;local v42;while true do if ((1 + 0)==v40) then return (v42 * (466 -(44 + 166))) + v41 ;end if (0==v40) then v41,v42=v1(v16,v18,v18 + (159 -((748 -(201 + 458)) + 68)) );v18=v18 + (3 -2) + 1 ;v40=2 -1 ;end end end local function v27()local v43,v44,v45,v46=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (9 -5) ;return (v46 * (16777965 -(119 + 630))) + (v45 * (2947 + 53560 + 9029)) + (v44 * (976 -720)) + v43 ;end local function v28()local v47=v27();local v48=v27();local v49=3 -(1 + 1) ;local v50=(v21(v48,346 -(324 + 21) ,17 + 3 ) * ((4 -2)^(112 -80))) + v47 ;local v51=v21(v48,1882 -(1556 + 305) ,110 -79 );local v52=((v21(v48,41 -9 )==(1 + (0 -0))) and  -(436 -(170 + (1274 -(765 + 244))))) or (2 -(429 -(314 + 114))) ;if (v51==((0 -0) + 0)) then if (v50==(0 + 0)) then return v52 * ((173 + 723) -(154 + 742)) ;else v51=1 + 0 ;v49=0 + 0 ;end elseif (v51==2047) then return ((v50==(1219 -(663 + 556))) and (v52 * ((1 + (0 -0))/(0 + 0 + 0)))) or (v52 * NaN) ;end return v8(v52,v51-(290 + (1145 -(259 + 153))) ) * (v49 + (v50/((1108 -(544 + 562))^52))) ;end local function v29(v30)local v53;if  not v30 then local v74=0 -0 ;while true do if (v74==(0 + 0)) then v30=v27();if (v30==(0 -0)) then return "";end break;end end end v53=v3(v16,v18,(v18 + v30) -(1 + 0) );v18=v18 + v30 ;local v54={};for v67=1078 -(692 + (442 -(28 + 29))) , #v53 do v54[v67]=v2(v1(v3(v53,v67,v67)));end return v6(v54);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=884 -(522 + 362) ;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v55==(2 + 1)) then v62=nil;while true do if (v56~=1) then else local v85=0;local v86;while true do if (v85~=0) then else v86=0 -0 ;while true do if (v86==2) then v56=2;break;end if (v86~=1) then else local v116=0;while true do if ((1 + 0)==v116) then v86=2;break;end if (v116~=0) then else for v121=1256 -(1202 + 53) ,v61 do local v122=1275 -(263 + 1012) ;local v123;local v124;local v125;local v126;while true do if ((2 + 0)==v122) then while true do if (v123==0) then local v136=0 -0 ;while true do if (v136~=(2 -1)) then else v123=1;break;end if (v136==(0 -0)) then v124=0;v125=nil;v136=1;end end end if (v123~=1) then else v126=nil;while true do if (v124==1) then if (v125==(1 + 0)) then v126=v25()~=(0 + 0) ;elseif (v125==2) then v126=v28();elseif (v125==(2 + 1)) then v126=v29();end v62[v121]=v126;break;end if (v124~=0) then else local v140=0 -0 ;while true do if (v140==1) then v124=1;break;end if (v140==(1635 -(1245 + 390))) then v125=v25();v126=nil;v140=1 + 0 ;end end end end break;end end break;end if ((1 + 0)==v122) then v125=nil;v126=nil;v122=2;end if (v122~=0) then else v123=1116 -(540 + 576) ;v124=nil;v122=1 + 0 ;end end end v60[3]=v25();v116=1 + 0 ;end end end if (v86==(246 -(132 + 114))) then local v117=0;while true do if ((1 -0)==v117) then v86=776 -(494 + 281) ;break;end if (v117==0) then v61=v27();v62={};v117=1;end end end end break;end end end if (v56==(0 + 0)) then local v87=0 -0 ;while true do if (v87==(166 -(101 + 63))) then v56=1566 -(1536 + 29) ;break;end if (1==v87) then v59={};v60={v57,v58,nil,v59};v87=2 + 0 ;end if ((684 -(331 + 353))==v87) then v57={};v58={};v87=1;end end end if (v56==2) then local v88=1600 -(374 + 1226) ;while true do if (v88~=0) then else for v105=609 -(143 + 465) ,v27() do local v106=0;local v107;local v108;local v109;while true do if (v106==0) then v107=395 -(322 + 73) ;v108=nil;v106=1;end if (v106==(1 + 0)) then v109=nil;while true do if (v107~=(781 -(760 + 21))) then else local v127=0;local v128;while true do if (0==v127) then v128=0;while true do if (v128==(1842 -(173 + 1669))) then v108=0 + 0 ;v109=nil;v128=1;end if (v128==(2 -1)) then v107=1;break;end end break;end end end if (1~=v107) then else while true do if (v108==0) then v109=v25();if (v21(v109,1,1)==0) then local v131=0;local v132;local v133;local v134;local v135;while true do if (v131==2) then while true do if (v132~=2) then else local v141=0 + 0 ;while true do if (v141==(1470 -(964 + 505))) then v132=3 + 0 ;break;end if (v141~=0) then else if (v21(v134,1,1)==(1 -0)) then v135[1 + 1 ]=v62[v135[1092 -(44 + 1046) ]];end if (v21(v134,2,2)==1) then v135[3]=v62[v135[3]];end v141=1;end end end if (v132==1) then local v142=0 -0 ;while true do if (v142==1) then v132=2 + 0 ;break;end if (v142==(409 -(17 + 392))) then v135={v26(),v26(),nil,nil};if (v133==0) then local v267=0 -0 ;local v268;while true do if (v267==0) then v268=69 -(45 + 24) ;while true do if (v268==(0 + 0)) then v135[3 + 0 ]=v26();v135[4]=v26();break;end end break;end end elseif (v133==1) then v135[3]=v27();elseif (v133==(5 -3)) then v135[11 -8 ]=v27() -(2^16) ;elseif (v133==(11 -8)) then local v355=0;local v356;while true do if (0~=v355) then else v356=0;while true do if (0~=v356) then else v135[3 + 0 ]=v27() -(2^16) ;v135[4]=v26();break;end end break;end end end v142=1 -0 ;end end end if (v132==0) then v133=v21(v109,2,192 -(17 + 172) );v134=v21(v109,424 -(111 + 309) ,6);v132=1 + 0 ;end if (v132~=3) then else if (v21(v134,3,775 -(578 + 194) )==(1 + 0)) then v135[2 + 2 ]=v62[v135[599 -(349 + 246) ]];end v57[v105]=v135;break;end end break;end if (v131==(1990 -(1739 + 250))) then v134=nil;v135=nil;v131=2;end if (v131~=(0 -0)) then else v132=0 + 0 ;v133=nil;v131=1;end end end break;end end break;end end break;end end end for v110=710 -(485 + 224) ,v27() do v58[v110-1 ]=v33();end v88=1 -0 ;end if (v88==(750 -(76 + 673))) then local v99=0;while true do if ((0 -0)==v99) then for v118=2 -1 ,v27() do v59[v118]=v27();end return v60;end end end end end end break;end if (0==v55) then v56=1338 -(366 + 972) ;v57=nil;v55=1;end if (v55~=(1 -0)) then else v58=nil;v59=nil;v55=5 -3 ;end if ((1 + 1)~=v55) then else v60=nil;v61=nil;v55=4 -1 ;end end end local function v34(v35,v36,v37)local v63=0;local v64;local v65;local v66;while true do if (v63==0) then v64=v35[1];v65=v35[2];v63=1;end if (v63==1) then v66=v35[3];return function(...)local v79=0;local v80;local v81;local v82;local v83;local v84;while true do if (1==v79) then v82={...};v83=v12("#",...) -1 ;v79=2;end if (v79==3) then A,B=v32(v11(v84));if  not A[1] then local v100=v35[4][v80] or "?" ;error("Script error at ["   .. v100   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v79==0) then v80=1;v81= -1;v79=1;end if (v79==2) then v84=nil;v84=function()local v89=v64;local v90=v65;local v91=v66;local v92=v32;local v93={};local v94={};local v95={};for v101=0 -(0 + 0) ,v83 do if ((4067==((29930 -15402) -10461)) and (v101>=v91)) then v93[v101-v91 ]=v82[v101 + 1 + 0 ];else v95[v101]=v82[v101 + (1429 -((2644 -1972) + 756)) ];end end local v96=(v83-v91) + 1 + 0 ;local v97;local v98;while true do local v102=0 + 0 ;local v103;local v104;while true do if ((v102==0) or (2544>(1924 + 2479))) then v103=1855 -(89 + 54 + 1712) ;v104=nil;v102=390 -(225 + 164) ;end if (((10339 -7095)<=(11834 -6846)) and (v102==(4 -3))) then while true do if ((v103==(0 + 0 + 0)) or ((512 + 788)>=(2891 -(117 + (1064 -619))))) then v104=0 -0 ;while true do if ((3305<=4567) and (v104==(242 -(199 + 43)))) then local v129=0 + 0 ;local v130;while true do if ((v129==(0 + 0)) or (3263>=(4795 -(139 + 10)))) then v130=1294 -(220 + 1074) ;while true do if (((9095 -4656)<=(5802 -(1113 + 225))) and (v130==(0 + 0))) then v97=v89[v80];v98=v97[4 -(747 -(156 + 588)) ];v130=3 -2 ;end if ((v130==(758 -(321 + 436))) or (2143<(206 + 325))) then v104=1 + 0 ;break;end end break;end end end if ((v104==(1 + 0)) or (((3077 + 1489) -(634 + 973))==(2082 -(679 + 134)))) then if ((v98<=(728 -(268 + 437))) or ((375 + 507)==(4175 -(172 + 244)))) then if (((185 + 118)==((214 -50) + 139)) and (v98<=(517 -(335 + 130 + 41)))) then if ((v98<=(1 + 4)) or ((469 -83)==(4818 -3719))) then if ((4802==(2525 + 2277)) and (v98<=((2 -0) + 0))) then if ((v98<=(0 + 0)) or ((10085 -7370)>(1887 + 1234))) then v95[v97[616 -(98 + 516) ]]=v95[v97[6 -3 ]] -v97[4] ;elseif (((1425 -((374 -149) + 801))<1683) and (v98>1)) then if ((v95[v97[2]]~=v95[v97[6 -2 ]]) or (3970>(5681 -(699 + 962)))) then v80=v80 + (120 -(71 + 48)) ;else v80=v97[864 -(483 + 378) ];end else v95[v97[1144 -(577 + (1647 -(1014 + 68))) ]]=v95[v97[3]] + v97[1 + 3 ] ;end elseif ((v98<=(796 -(194 + 599))) or ((1933 + 1499)>((1117 + 7126) -4467))) then if (((1139 + 2672)>=(7386 -5062)) and  not v95[v97[2 + (633 -(126 + 507)) ]]) then v80=v80 + 1 ;else v80=v97[1245 -(792 + 450) ];end elseif ((v98>(1271 -(1042 + 225))) or (((15558 -11099) -(509 + 1152))>=(11817 -7985))) then local v182=0;local v183;local v184;local v185;while true do if (((451 + 379)<=(1476 + 1646)) and (v182==(2 -1))) then v185=v95[v183 + (9 -7) ];if (((4984 -((718 -250) + 1297))>(4828 -2096)) and (v185>(0 -0))) then if ((v184>v95[v183 + ((4 -1) -2) ]) or ((3505 -(257 + (1194 -923)))<=(2488 -((8 -2) + 88)))) then v80=v97[1917 -(310 + 1604) ];else v95[v183 + ((748 -(89 + 106)) -(151 + 399)) ]=v184;end elseif ((v184<v95[v183 + (694 -((1217 -734) + (620 -410))) ]) or ((33 + 32)>=(3718 -(59 + (336 -264))))) then v80=v97[3];else v95[v183 + (5 -2) ]=v184;end break;end if ((v182==(274 -(199 + 75))) or (441>4524)) then local v274=0;while true do if ((1==v274) or ((3982 -(1601 + 248))<=(46 + 1665))) then v182=(2204 -847) -(808 + 548) ;break;end if ((v274==(62 -(43 + 19))) or (((22415 -13993) -6396)<(272 + 549))) then v183=v97[2];v184=v95[v183];v274=2 -1 ;end end end end else local v186=1264 -(1202 + 62) ;local v187;local v188;while true do if (((273 + 1546)<=(3691 -(372 + 614))) and (v186==(1 + 0 + 0))) then while true do if (((1208 + 1683)<(173 + 460 + 2782)) and (v187==(0 -0))) then v188=v97[1 + 0 + 1 ];do return v95[v188](v13(v95,v188 + 1 ,v97[3]));end break;end end break;end if (((3498 -(4264 -2450))==(5591 -3907)) and (v186==0)) then v187=0 + 0 ;v188=nil;v186=1 + 0 ;end end end elseif ((v98<=(4 + 4)) or ((4635 -1953)>(9895 -7050))) then if ((v98<=(3 + 3)) or ((2015 -704)>(1129 + (1802 -(406 + 276))))) then local v145=(5730 -4566) -(1114 + 50) ;local v146;local v147;local v148;while true do if (((8327 -5588)==(4058 -(969 + 350))) and (v145==((0 -0) -0))) then v146=(876 -(822 + 54)) -0 ;v147=nil;v145=1 -0 ;end if ((v145==(1 + 0)) or ((87 + 3394)<(4575 -(1257 + 326)))) then v148=nil;while true do if (((7388 -3005)>=(1362 -(599 + 13))) and (v146==(2 -1))) then for v298=v147 + (1846 -(1306 + (1061 -522))) ,v97[935 -(32 + 32 + 867) ] do v148=v148   .. v95[v298] ;end v95[v97[3 -(202 -(153 + 48)) ]]=v148;break;end if ((v146==(240 -(155 + 85))) or ((438 + 187 + 2290)>=((4748 + 5183) -(4730 + 1526)))) then local v286=0;while true do if (((15040 -(7603 + 3329))>(1815 -(816 + 119))) and (v286==(0 -0))) then v147=v97[1546 -(1447 + 96) ];v148=v95[v147];v286=1855 -((2428 -898) + 324) ;end if ((v286==(1 + 0)) or ((110 -67)>=(3943 -(582 + 1058)))) then v146=1 + 0 ;break;end end end end break;end end elseif (((5980 -3549)>=887) and (v98==(25 -(67 -49)))) then v95[v97[2]]={};else do return v95[v97[2]];end end elseif ((v98<=(308 -(274 + 25))) or ((2380 + 1753)<=(2732 -1735))) then local v149=0;local v150;while true do if (((4939 -(282 + 1307))==3350) and ((0 + 0)==v149)) then v150=v97[5 -(2 + 1) ];v95[v150]=v95[v150](v13(v95,v150 + (103 -(44 + 58)) ,v97[2 + 1 ]));break;end end elseif ((v98==(986 -(263 + 713))) or ((5428 -(1505 + 255))<=2120)) then for v260=v97[2],v97[3] do v95[v260]=nil;end else local v190=0 + 0 ;local v191;local v192;local v193;while true do if ((((814 -(253 + 561)) -0)==v190) or ((7506 -3381)<=(5 + 573 + 111))) then local v275=1017 -(1009 + 8) ;while true do if ((((12539 -6037) -(1313 + 420))==4769) and (v275==(1181 -(920 + 260)))) then v190=(10 -7) -2 ;break;end if ((v275==(0 + 0)) or ((4558 -(1473 + 267))<=(7394 -4628))) then v191=803 -(431 + 372) ;v192=nil;v275=2 -1 ;end end end if ((v190==(1 + 0)) or ((6524 -2070)<=(2677 -((1507 -(1106 + 253)) + 171)))) then v193=nil;while true do if ((v191==(2 -1)) or ((252 + 149)>=((1383 -(66 + 108)) -(1657 -1057)))) then for v337=1, #v94 do local v338=554 -(263 + 291) ;local v339;local v340;local v341;while true do if ((v338==(1 + 0)) or ((1061 -(215 + 311))>(3979 -(541 + 980)))) then v341=nil;while true do if (((5792 -(1107 + 220))>=324) and (v339==(0 -0))) then local v390=0;while true do if (((3216 -(88 + 392))>2565) and ((0 -(0 + 0))==v390)) then v340=0 -0 ;v341=nil;v390=140 -(99 + 40) ;end if ((v390==(488 -(123 + 364))) or (((3140 + 484) -(147 + 32))<=(4019 -(927 + (719 -483))))) then v339=1373 -(443 + 929) ;break;end end end if ((((2924 -(252 + 292)) + 2013)>(417 + 1996)) and (v339==(1 + 0))) then while true do if (((4209 -(878 + 688))==((7 -2) + 2638)) and (v340==(0 -0))) then v341=v94[v337];for v415=1500 -(395 + 1105) , #v341 do local v416=0;local v417;local v418;local v419;local v420;while true do if ((1863<=(8416 -4824)) and (v416==(1366 -(349 + 515 + 501)))) then v419=nil;v420=nil;v416=2;end if ((v416==(0 -0)) or ((1482 + 392)==(6879 -(439 + 1473)))) then v417=949 -(328 + 621) ;v418=nil;v416=789 -(593 + 195) ;end if ((v416==(7 -5)) or ((6940 -((977 -(9 + 1)) + 1016))==3467)) then while true do if ((v417==(2 -(1 + 0))) or ((1594 + 1156)>(9717 -(17526 -11720)))) then v420=v418[6 -(14 -10) ];if (((v419==v95) and (v420>=v192)) or ((1641 -(1363 + 198))>=(1487 -(437 + 688)))) then local v423=0 + (0 -0) ;local v424;while true do if ((((282 -177) + 877)<=(2592 -((2720 -(483 + 1169)) + 471))) and (v423==(0 -0))) then v424=0;while true do if (((4529 -3232)>((6113 -(98 + 281)) -4558)) and (v424==(841 -(651 + 190)))) then v193[v420]=v419[v420];v418[1]=v193;break;end end break;end end end break;end if ((v417==0) or ((3515 -(22 + 168))<(4537 -(916 + 1037)))) then local v422=13 -(5 + 8) ;while true do if (((982 + 999)<3592) and (v422==(1 + 0))) then v417=1;break;end if ((v422==(1951 -((861 -548) + 1638))) or ((758 + 3182)>=(6303 -(365 + 1170 + 29)))) then v418=v341[v415];v419=v418[1092 -(972 + 119) ];v422=1 -0 ;end end end end break;end end end break;end end break;end end break;end if (((3229 -(386 + 531))<=(589 + 3968)) and (v338==(0 -0))) then v339=0 + (0 -0) ;v340=nil;v338=1;end end end break;end if ((((7445 -(801 + 584)) -(1118 + 636))>=3927) and (v191==(1987 -(1865 + 122)))) then local v310=0 -0 ;local v311;while true do if (((6527 -4063)>(1604 -(202 + 1234))) and (v310==(0 + 0))) then v311=0 -0 ;while true do if (((14102 -11142)<=(8197 -5179)) and (v311==1)) then v191=(239 -178) -(31 + 29) ;break;end if ((v311==(1521 -(81 + 1440))) or ((11225 -7947)>=(6589 -(1414 + (828 -(162 + 265)))))) then local v384=0 -0 ;while true do if ((v384==(1076 -(623 + 452))) or ((6030 -(473 + 907))<((291 -(106 + 117)) + 411))) then v311=562 -(132 + 429) ;break;end if (((1398 -(885 + 513))==v384) or ((3112 -(686 + 1259))>=3111)) then v192=v97[2];v193={};v384=(940 + 350) -(671 + 618) ;end end end end break;end end end end break;end end end elseif (((1963 -(240 + 694))>(155 + 613)) and (v98<=(1560 -(1233 + 310)))) then if ((v98<=(3 + 11)) or (317>(9934 -7932))) then if (((2976 + 141)==3117) and (v98<=(7 + 5))) then local v151=0;local v152;local v153;local v154;local v155;while true do if ((v151==(1685 -(1125 + 559))) or ((6608 -3607)<=(3237 -(1711 -(47 + 92))))) then v154=nil;v155=nil;v151=1353 -(777 + 574) ;end if (((1887 + 1356)<(13605 -8651)) and (v151==(540 -(273 + 265)))) then while true do if (((6457 -3909)>2188) and (v152==(0 + 0 + 0))) then local v287=(1511 + 395) -(1683 + 223) ;while true do if ((v287==(0 -0)) or ((10752 -6292)<=(3293 -(164 + 182)))) then v153=v90[v97[1 + 2 ]];v154=nil;v287=1;end if ((v287==(701 -(327 + 373))) or ((2866 -1347)==(4396 -2570))) then v152=3 -2 ;break;end end end if ((v152==(356 -(316 + 38))) or (2906<=(10934 -8733))) then for v299=1989 -(242 + 1463 + 283) ,v97[16 -12 ] do local v300=555 -(334 + 221) ;local v301;local v302;while true do if ((v300==0) or ((5564 -3042)==((4098 + 1209) -(1171 + 553)))) then v301=0 + 0 ;v302=nil;v300=2 -1 ;end if (((4761 -2792)==(3324 -1355)) and ((1 + 0)==v300)) then while true do if ((((0 -0) + 0)==v301) or ((5452 -3530)>(261 + 2027))) then local v381=1797 -(36 + 1761) ;while true do if ((v381==(1 + 0)) or ((1072 + 269)==(505 + 509))) then v301=1 + 0 ;break;end if ((v381==0) or ((2725 -(4146 -3151))<=1153)) then v80=v80 + 1 ;v302=v89[v80];v381=1 + 0 ;end end end if ((v301==(1 + 0)) or ((15783 -11214)>(9684 -5078))) then if ((v302[(8442 -6733) -(153 + 1555) ]==(17 + (718 -(677 + 25)))) or ((3798 -(1330 + 306))==(6070 -3201))) then v155[v299-(1 + 0) ]={v95,v302[(453 -(58 + 394)) + (3 -1) ]};else v155[v299-(1 + 0) ]={v36,v302[366 -(6 + 357) ]};end v94[ #v94 + 1 + 0 ]=v155;break;end end break;end end end v95[v97[1 + 1 ]]=v34(v153,v154,v37);break;end if (((177 -49)<=(3010 -(22 + 101))) and (v152==(1 -0))) then local v289=0 + 0 + 0 ;while true do if (((3442 -(589 + 428))>=868) and (v289==(1787 -(1195 + 592)))) then v155={};v154=v10({},{__index=function(v343,v344)local v357=0 + 0 ;local v358;local v359;while true do if (((5269 -2811)>=(1884 -((651 -478) + 132))) and (v357==(1 + 0))) then while true do if ((v358==(903 -(469 + 434))) or (2020==(2136 -(144 + 26 + 7)))) then v359=v155[v344];return v359[1][v359[4 -2 ]];end end break;end if ((v357==(0 + 0)) or ((5304 -2978)<(4471 -3562))) then v358=0 -(551 -(397 + 154)) ;v359=nil;v357=1;end end end,__newindex=function(v343,v344,v345)local v360=0 + 0 ;local v361;local v362;while true do if (((1598 -(4598 -3447))==(356 + 91)) and (v360==(1 + 0))) then while true do if (((444 + 139)<=(363 + 1510)) and (v361==(0 -(0 + 0)))) then v362=v155[v344];v362[1 -0 ][v362[1 + 1 ]]=v345;break;end end break;end if ((v360==(0 + 0)) or ((1307 -970)>=(2137 -1413))) then local v383=1556 -(1507 + 49) ;while true do if ((3157>2293) and (v383==(0 -(0 -0)))) then v361=0 -0 ;v362=nil;v383=1;end if (((1 + (1681 -(511 + 1170)))==v383) or ((6723 -4769)==(12284 -7299))) then v360=2 -1 ;break;end end end end end});v289=121 -(105 + 15) ;end if (((5684 -(873 + 452))>(2039 -788)) and (v289==(1520 -(820 + 699)))) then v152=(19 -13) -4 ;break;end end end end break;end if ((v151==(520 -(68 + 452))) or (3992<=891)) then v152=0;v153=nil;v151=1 + 0 ;end end elseif (((3812 -(1328 + 610))==(569 + 1305)) and (v98==(7 + (1731 -(1654 + 71))))) then v95[v97[4 -2 ]][v95[v97[3 + 0 ]]]=v95[v97[4]];else local v196=0;local v197;local v198;local v199;local v200;while true do if ((v196==(0 -0)) or (4394<3173)) then v197=0 -0 ;v198=nil;v196=1 + 0 ;end if (((12922 -9023)==(4862 -(285 + 678))) and (v196==(1 -0))) then v199=nil;v200=nil;v196=1635 -(1290 + 343) ;end if (((3906 -2778)<(6375 -4132)) and (v196==(2 + 0))) then while true do if (((554 + 2059)<(250 + 2834)) and ((1 + 0)==v197)) then v200=nil;while true do if ((v198==1) or (((149 -84) + 226)>=(1712 -(470 + 491)))) then for v374=v199 + (1602 -(312 + 1289)) ,v97[690 -(539 + 148) ] do v7(v200,v95[v374]);end break;end if ((960<(1686 + 2636)) and (v198==0)) then local v363=0;local v364;while true do if ((v363==(0 + 0)) or ((4371 -(809 + 198))==(4256 -(487 + (224 -(23 + 14)))))) then v364=0 -0 ;while true do if (((4416 -(583 + 207))<=((12996 -7764) -1191)) and (v364==(55 -(53 + 1)))) then v198=1;break;end if ((v364==(0 + 0 + 0)) or ((16460 -12262)<=(3134 -(309 + 360)))) then v199=v97[(7 -4) -1 ];v200=v95[v199];v364=1;end end break;end end end end break;end if ((v197==0) or ((6500 -3090)>(8655 -5184))) then local v312=(926 -(86 + 840)) -0 ;while true do if ((((5465 + 434) -(176 + 1285))>=(8408 -5407)) and (v312==(983 -(12 + 970)))) then v197=211 -(128 + 82) ;break;end if (((2950 -(344 + 962))>=(1917 -1362)) and (v312==(0 + 0))) then v198=0;v199=nil;v312=1;end end end end break;end end end elseif ((v98<=(31 -16)) or ((2590 + 370)==(744 + 1523))) then local v156=0;local v157;local v158;while true do if (((2801 + 714)==(3012 + (1000 -(420 + 77)))) and (v156==(1 + 0))) then while true do if (((2550 -((399 -87) + 384))<(5826 -1327)) and (v157==(0 + 0))) then v158=v97[7 -5 ];v95[v158]=v95[v158]();break;end end break;end if ((v156==(0 -0)) or ((3106 -(1282 + 548))>=(2995 + 1984))) then v157=0 -0 ;v158=nil;v156=1 + 0 ;end end elseif (((9360 -5284)==(8770 -4694)) and (v98==16)) then local v201=0 -0 ;local v202;local v203;local v204;local v205;while true do if ((v201==(0 + 0)) or (3168==(1485 + 3261))) then v202=0 + 0 ;v203=nil;v201=1934 -(605 + 1328) ;end if ((v201==1) or ((4092 + 427)<=(144 + 21))) then v204=nil;v205=nil;v201=2;end if (((7596 -5542)<=(6736 -4521)) and (v201==(3 -1))) then while true do if ((((3006 -1808) -(168 + (708 -(91 + 433))))<(1858 + 38)) and (v202==(1 + 1))) then if (((12219 -7238)>(4161 -(473 + 557))) and (v204>(0 + 0))) then if (((5209 -2390)>(2834 -732)) and (v205<=v95[v203 + (1 -0) ])) then local v375=0 + 0 ;while true do if ((717<=3035) and ((0 -0)==v375)) then v80=v97[2 + 1 ];v95[v203 + 1 + 2 ]=v205;break;end end end elseif (((4929 -(4502 -(1337 + 631)))>=(10373 -(4848 + 3285))) and (v205>=v95[v203 + 1 + 0 ])) then local v376=0;local v377;while true do if ((4037>=(3103 -(60 + 114))) and ((0 + 0)==v376)) then v377=0;while true do if (((9409 -4578)==(5847 -1016)) and (v377==(0 -0))) then v80=v97[3];v95[v203 + ((6 + 1) -(676 -(588 + 84))) ]=v205;break;end end break;end end end break;end if ((v202==(3 -2)) or (2958<(1083 -(264 + 629)))) then local v313=0 -0 ;while true do if ((0==v313) or ((2915 + (2868 -(510 + 799)))<(4637 -(1306 + 197)))) then v205=v95[v203] + v204 ;v95[v203]=v205;v313=1;end if ((((10978 -7778) -(10 + 154))>=(764 + 495)) and ((1 + 0)==v313)) then v202=5 -3 ;break;end end end if ((666==(1689 -(712 + 311))) and ((1068 -(50 + 1018))==v202)) then local v314=0 -0 ;while true do if ((v314==(3 -2)) or (2810<(1550 + (95 -41)))) then v202=3 -2 ;break;end if ((v314==(0 + 0)) or ((2074 -(769 + 176))>4693)) then v203=v97[(2532 -737) -(1528 + 265) ];v204=v95[v203 + 1 + (1025 -(658 + 366)) ];v314=2 -1 ;end end end end break;end end else local v206=0 + 0 ;local v207;local v208;while true do if ((v206==(1194 -(44 + 1150))) or ((444 + 339)>(12903 -10150))) then v207=1095 -(280 + 815) ;v208=nil;v206=1;end if (((5791 -2253)<=(3124 + 604)) and ((2 -1)==v206)) then while true do if ((3429>=4) and (v207==((0 -0) + 0))) then v208=v97[1 + 1 ];do return v13(v95,v208,v81);end break;end end break;end end end elseif (((1610 -(172 + 32))>(1170 -509)) and (v98<=20)) then if ((v98<=(1760 -(1229 + 513))) or (1942==(570 + 2147))) then v95[v97[4 -2 ]]=v95[v97[10 -7 ]]%v97[1960 -(1670 + 286) ] ;elseif ((v98==(1103 -(1012 + 72))) or ((1271 + 3298)<=(5015 -(456 + 44)))) then v95[v97[759 -(159 + (1725 -1127)) ]]=v36[v97[3]];else v95[v97[1847 -(1586 + 259) ]]();end elseif (((2000 -(96 + 1021))>27) and (v98<=(92 -71))) then local v160=1115 -(643 + 472) ;local v161;local v162;while true do if (((569 + 150)<=(18078 -13126)) and (v160==1)) then while true do if (((5481 -3443)>141) and (v161==((0 + 0) -0))) then v162=v97[5 -3 ];v95[v162]=v95[v162](v95[v162 + 1 + (0 -0) ]);break;end end break;end if (((0 + (0 -0))==v160) or ((15057 -10113)==(302 + 1054))) then v161=1978 -(1086 + 892) ;v162=nil;v160=796 -((1844 -1247) + 198) ;end end elseif ((v98>(3 + 4 + 15)) or ((274 + 71)>=(2096 -(88 + 1027)))) then local v211=0 -0 ;local v212;local v213;while true do if ((v211==(1 + 0)) or ((2719 -(433 + 851))>1487)) then while true do if ((v212==(0 + 0)) or ((1941 -(818 + (1488 -987)))>=(3041 -((2816 -1069) + 213)))) then v213=v97[1 + (1 -0) ];do return v13(v95,v213,v213 + v97[1 + 2 ] );end break;end end break;end if (((1963 -(1346 + 617))==v211) or ((718 -438)==((4518 -1264) -(508 + 143)))) then v212=0 + 0 ;v213=nil;v211=530 -(435 + 94) ;end end elseif (((466 + 26)==(2071 -(337 + 1242))) and (v97[2]==v95[v97[1182 -(274 + (2116 -1212)) ]])) then v80=v80 + 1 + 0 ;else v80=v97[3];end elseif ((4660==4660) and (v98<=35)) then if (((37 + 41)<(2424 -(285 + 1098))) and (v98<=(410 -(372 + 9)))) then if (((6010 -(1153 + 146))>=(1676 -389)) and (v98<=(43 -17))) then if (((4289 -2518)>=1085) and (v98<=24)) then local v163=0;local v164;local v165;local v166;local v167;while true do if ((((263 + 1495) -(29 + 30))<(18004 -14391)) and (v163==(850 -(757 + 93)))) then v164=0 + 0 + 0 ;v165=nil;v163=3 -2 ;end if (((339 + 994 + 359)<=(4578 -2208)) and (v163==(1 + 0))) then v166=nil;v167=nil;v163=1 + 1 ;end if ((v163==(2 + 0)) or ((3131 + 755)>4269)) then while true do if ((v164==(1 -0)) or ((5125 -(70 + 99))<3349)) then v167=v97[2 + 1 ];for v303=843 -(592 + 250) ,v167 do v166[v303]=v95[v165 + v303 ];end break;end if ((1733>(1501 -(13 + 72))) and (v164==(74 -(39 + 35)))) then v165=v97[2];v166=v95[v165];v164=(2 -1) + 0 ;end end break;end end elseif ((700<=(2606 -(106 + 500))) and (v98>(53 -28))) then v95[v97[228 -(166 + 60) ]]=v97[3];else v95[v97[3 -(1 -0) ]]=v97[3 -0 ] + v95[v97[1 + (6 -3) ]] ;end elseif ((v98<=(71 -44)) or ((18439 -(3044 + 10828))<1370)) then v37[v97[1434 -(250 + 1181) ]]=v95[v97[1 + 1 ]];elseif ((2101>=(228 + 1299)) and (v98==28)) then local v217=(1420 + 329) -(1233 + 516) ;local v218;local v219;local v220;local v221;local v222;local v223;while true do if ((v217==(1514 -((116 -25) + 1423))) or ((281 -(77 + 105))>4976)) then v218=0;v219=nil;v217=2 -(4 -3) ;end if (((7522 -2765)<=(13149 -8379)) and (v217==((1278 -(443 + 834)) + (1404 -(644 + 759))))) then v222=nil;v223=nil;v217=4 -1 ;end if (((1292 + 1825)==(6362 -3245)) and (v217==(9 -6))) then while true do if (((5160 -(56 + 243))==(5091 -(129 + 101))) and (v218==(0 + 0))) then local v317=0 -0 ;while true do if ((v317==(0 + 0)) or ((3396 + 1524)<=4783)) then v219=0 -0 ;v220=nil;v317=1 + 0 ;end if (((2542 + 175)==(3581 -((368 -221) + 717))) and (v317==(1 + (0 -0)))) then v218=1 + 0 ;break;end end end if ((v218==(101 -(23 + 76))) or (806>1645)) then v223=nil;while true do if ((v219==(479 -(356 + 123))) or ((1049 + (3191 -(13 + 1724)))<=572)) then local v368=0 + (1806 -(180 + 1626)) ;while true do if ((v368==(0 + 0)) or ((417 + 208)>(4721 -2112))) then local v385=501 -(432 + 69) ;while true do if (((11498 -8122)<4254) and (v385==(0 + 0))) then v220=v97[7 -5 ];v221,v222=v92(v95[v220](v95[v220 + 1 + 0 ]));v385=1 + 0 ;end if (((4500 -2993)<(6075 -3539)) and (v385==(1736 -((1852 -(1503 + 233)) + 1619)))) then v368=1160 -(890 + 269) ;break;end end end if (((2 -1)==v368) or ((2065 -(1705 + 245))>=((6894 -1880) -2761))) then v219=1;break;end end end if ((v219==(1 + 0)) or ((1863 -(1495 + 54))==(385 + (4142 -1257)))) then local v369=0 -0 ;local v370;while true do if (((1164 + 2085)>=2593) and (v369==(0 -0))) then v370=0 -0 ;while true do if (((3710 -(132 + 380))>=2664) and (v370==0)) then local v407=0 + 0 ;while true do if ((v407==1) or (4447<=3803)) then v370=779 -(672 + 106) ;break;end if (((0 + 0)==v407) or ((3779 -(889 + 500))==(11198 -6232))) then v81=(v222 + v220) -1 ;v223=0 + 0 ;v407=1 + 0 ;end end end if (((6188 -3114)>(8671 -5961)) and (v370==(1 -0))) then v219=211 -(66 + 143) ;break;end end break;end end end if ((v219==(5 -(9 -6))) or ((359 + 3004)==(11189 -7723))) then for v378=v220,v81 do local v379=0 -0 ;local v380;while true do if (((1942 + 793)<(5243 -(40 + 186 + 199))) and (v379==0)) then v380=0;while true do if ((((824 + 1081) -(496 + 881))<=(2375 -(515 + 19 + 67))) and (v380==(0 + 0))) then v223=v223 + (1 -0) ;v95[v378]=v221[v223];break;end end break;end end end break;end end break;end if ((v218==(1385 -(246 + 1138))) or ((1181 -646)==(26 + (53 -35)))) then local v318=0 -0 ;while true do if (((366 -(134 + 231))==v318) or (3164<110)) then v218=2 + 0 ;break;end if (((5490 -(770 + 791))==(4322 -(26 + 148 + 219))) and (v318==(0 -0))) then v221=nil;v222=nil;v318=1504 -(1300 + 203) ;end end end end break;end if ((v217==((994 -(816 + 177)) + 0)) or (1245==(7813 -(5733 -(181 + 787))))) then v220=nil;v221=nil;v217=(1854 -(1730 + 119)) -3 ;end end else v95[v97[1832 -(383 + 1447) ]][v97[206 -(71 + 132) ]]=v95[v97[2 + (2 -0) ]];end elseif (((137 + 3691)>(479 -93)) and (v98<=(29 + (1229 -(78 + 1148))))) then if ((3185<=(1934 + 1777)) and (v98<=30)) then v95[v97[6 -4 ]]= #v95[v97[1915 -(414 + 1498) ]];elseif ((v98>(1 + 30)) or ((1519 + 1045)==(4638 -3468))) then local v226=(1830 -(124 + 158)) -(578 + 970) ;local v227;while true do if ((v226==(0 + 0)) or ((1447 -((1274 -(51 + 220)) + 402))>=388)) then v227=v97[2];v95[v227](v95[v227 + (2 -1) + 0 ]);break;end end else local v228=1363 -(15 + (3780 -2432)) ;local v229;while true do if (((1290 -560)<=921) and (v228==(0 -0))) then v229=v97[7 -5 ];v95[v229](v13(v95,v229 + 1 ,v97[3]));break;end end end elseif ((v98<=(27 + 6)) or ((658 + 1040)==(3328 + 881))) then v95[v97[2]]=v95[v97[7 -4 ]];elseif ((v98>(21 + 13)) or ((651 + 1576)<(2 + 231))) then v80=v97[1 + 2 + 0 ];else v95[v97[2]]=v95[v97[10 -7 ]]%v95[v97[1931 -(1813 + 114) ]] ;end elseif ((2832<(2934 + 641)) and (v98<=(263 -(68 + 154)))) then if (((5238 -(433 + 531 + 670))>=(6600 -3713)) and (v98<=38)) then if ((43<(3350 -(183 + (1862 -1060)))) and (v98<=(70 -34))) then local v173=0 -0 ;local v174;while true do if (((0 -0)==v173) or ((3651 -2353)>1736)) then v174=v95[v97[4]];if (((1729 -981)<(5940 -(192 + 998))) and  not v174) then v80=v80 + ((9 -5) -3) ;else local v278=0;local v279;local v280;while true do if ((v278==(0 -0)) or ((924 + 285)>=(4446 -(1512 + 291)))) then v279=0 + 0 ;v280=nil;v278=1 + 0 ;end if ((v278==(1 -0)) or ((2574 -(48 + 258))<(2262 -(5 + 25)))) then while true do if ((v279==(0 + 0)) or (536>(11250 -8992))) then v280=1789 -(1778 + 5 + 6) ;while true do if (((1157 + 2207)<=(6022 -(487 + 1302))) and (v280==(0 -0))) then v95[v97[7 -5 ]]=v174;v80=v97[1825 -(471 + 1351) ];break;end end break;end end break;end end end break;end end elseif ((v98>(133 -96)) or ((2322 -(48 + 505))<=(2371 -1831))) then v95[v97[(1772 -1158) -(317 + 155 + 140) ]][v97[2 + 1 ]]=v97[8 -4 ];else v95[v97[(979 -(914 + 64)) + 1 ]]=v34(v90[v97[(16 -11) -(47 -(26 + 19)) ]],nil,v37);end elseif ((v98<=((37 + 83) -81)) or (1113>(4416 -3122))) then do return;end elseif (((2934 -1775)<=(303 + 1336)) and (v98>(189 -149))) then local v235=(1149 -(341 + 808)) + 0 ;local v236;local v237;local v238;local v239;local v240;while true do if ((v235==(1650 -(862 + 786))) or ((10266 -7395)>(3410 + 817))) then v240=nil;while true do if ((v236==(206 -(83 + 123))) or (((8615 -(1434 + 62)) -3717)<=(4229 -2138))) then local v319=0 + 0 ;while true do if ((1==v319) or (2333<(4979 -3568))) then v236=1;break;end if ((v319==0) or ((2194 -(48 + 1236))>=((16322 -11189) -((2224 -(181 + 807)) + 501)))) then v237=v97[1952 -(438 + 1512) ];v238,v239=v92(v95[v237](v13(v95,v237 + 1 + 0 ,v97[5 -2 ])));v319=1 -0 ;end end end if ((v236==(2 + 0)) or ((6118 -4546)>4333)) then for v346=v237,v81 do local v347=0 -0 ;local v348;while true do if ((v347==(0 + 0)) or (((5263 -(347 + 871)) -(454 + 576))<(4122 -1439))) then v348=0;while true do if ((v348==(1691 -(1461 + 230))) or ((5313 -(315 + 249))==4220)) then v240=v240 + (3 -2) ;v95[v346]=v238[v240];break;end end break;end end end break;end if (((299 + 1737)<=((8097 -(63 + 16)) -3097)) and (v236==(1 + 0))) then local v320=0 + 0 ;while true do if ((v320==0) or (2224==(4667 -(792 + 138 + 385)))) then v81=(v239 + v237) -(1610 -(279 + 1330)) ;v240=0 + 0 ;v320=2 -1 ;end if ((v320==(3 -2)) or (1440>=(7629 -3324))) then v236=5 -3 ;break;end end end end break;end if (((4447 -(117 + 1486))>=(1482 -1075)) and (v235==(0 -(704 -(90 + 614))))) then v236=(589 -(77 + 512)) + 0 ;v237=nil;v235=(2 -1) + 0 ;end if ((v235==(1287 -(985 + 301))) or ((717 + 2546)>=4393)) then v238=nil;v239=nil;v235=2;end end elseif ((v95[v97[2 -0 ]]==v97[8 -4 ]) or ((1650 -1088)<(1988 -1440))) then v80=v80 + 1 ;else v80=v97[14 -11 ];end elseif ((v98<=(709 -(16 + 649))) or ((11193 -7907)<=2237)) then if (((3477 -(1010 + (927 -(151 + 300))))<=3670) and (v98<=(1723 -(267 + 1414)))) then local v175=539 -(66 + 473) ;local v176;local v177;while true do if ((v175==(1 -0)) or ((1212 -(603 + 89))>(1372 + 2967))) then while true do if ((v176==0) or ((581 + 135)>=3080)) then v177=v97[5 -3 ];v95[v177](v13(v95,v177 + (2 -1) ,v81));break;end end break;end if ((v175==((0 + 0) -0)) or ((1740 -((433 -(168 + 20)) + 1460))==(2601 + 1766))) then v176=0 + 0 ;v177=nil;v175=1317 -(793 + 523) ;end end elseif (((4405 -(6 + 144))<(16499 -11669)) and (v98>43)) then local v241=0 + 0 ;local v242;local v243;while true do if ((v241==1) or ((18252 -13967)<((2869 -(562 + 225)) -(706 + 877)))) then while true do if ((v242==0) or ((12373 -(4780 + 4324))>=(5582 -(648 + 1175)))) then v243=v97[2];v95[v243]=v95[v243](v13(v95,v243 + 1 ,v81));break;end end break;end if (((0 + 0)==v241) or (3135==(1037 + 1163))) then local v281=1463 -(679 + 784) ;while true do if (((0 -0)==v281) or ((8288 -(9526 -4393))<225)) then v242=0 + 0 ;v243=nil;v281=1 + 0 + 0 ;end if (((549 + 951)>=(2754 -2020)) and (v281==(1 + 0))) then v241=1;break;end end end end else local v244=0 + 0 ;local v245;local v246;local v247;local v248;local v249;while true do if ((v244==((2 -0) + 0)) or (((539 -(111 + 120)) + 1778)<=(65 + 246))) then v249=nil;while true do if ((v245==(3 -1)) or ((1021 + (1395 -(8 + 705)))==(1240 + 480))) then for v349=v246,v81 do local v350=0 -0 ;local v351;local v352;while true do if ((v350==(742 -(475 + 109 + 158))) or (4282<(8681 -6253))) then v351=0 + 0 ;v352=nil;v350=1 + 0 ;end if (((3892 -(102 + 163 + 726))>=(334 + 2000)) and (v350==((687 -(290 + 395)) -1))) then while true do if (((127 + 164)<(9135 -5031)) and (v351==0)) then v352=0;while true do if ((v352==(0 + 0)) or (4927<(761 + 378))) then v249=v249 + 1 + 0 ;v95[v349]=v247[v249];break;end end break;end end break;end end end break;end if ((v245==(130 -(119 + 10))) or ((72 + 2659)==(260 + 66))) then local v323=0 -0 ;local v324;while true do if ((v323==(0 + 0)) or ((391 + 836)<=267)) then v324=1254 -(1146 + 108) ;while true do if (((4935 -(407 + 55))>(11318 -6946)) and (v324==(625 -(335 + 289)))) then v245=479 -(267 + 210) ;break;end if (((6775 -(4036 -(735 + 296)))>=(282 + 221 + 26)) and (0==v324)) then local v388=0 -0 ;while true do if ((v388==0) or (2526<(8 + 392))) then v81=(v248 + v246) -(94 -(72 + 21)) ;v249=0;v388=(1974 -(112 + 1861)) + 0 ;end if ((v388==(2 -1)) or ((9 + 37 + 39)>2721)) then v324=1;break;end end end end break;end end end if ((3034>((2187 -1244) + (491 -(117 + 63)))) and (v245==(0 -0))) then local v325=0 -0 ;local v326;while true do if (((3043 + 1914)==(460 + 4497)) and (v325==(593 -(11 + 582)))) then v326=0;while true do if (((1000 -(493 + (1682 -(80 + 1096))))==v326) or ((881 -(475 + 239))>=(1353 + (1646 -(95 + 10))))) then v245=843 -(8 + 834) ;break;end if ((((1585 + 3180) -(65 + 273 + 62))==4365) and (v326==((0 -0) + 0))) then v246=v97[1318 -(1280 + 36) ];v247,v248=v92(v95[v246](v13(v95,v246 + 1 + 0 ,v81)));v326=1 -(0 + 0) ;end end break;end end end end break;end if (((1 -0)==v244) or (4381<(1828 -(67 + 387)))) then local v282=0 + 0 ;while true do if ((v282==0) or (1325>(12439 -8156))) then v247=nil;v248=nil;v282=(4071 -2231) -(471 + 505 + 863) ;end if ((337<=(722 + 498)) and (1==v282)) then v244=1033 -(15 + 1016) ;break;end end end if ((v244==(0 + (0 -0))) or ((1557 -(275 + 277))>=(4114 + 239))) then local v283=0 + 0 ;while true do if ((v283==1) or ((1981 -(365 + 107))>=4373)) then v244=1616 -(595 + 1020) ;break;end if (((2619 + 655)>(11693 -8475)) and (v283==(0 -0))) then v245=0;v246=nil;v283=1 + 0 ;end end end end end elseif (((10 + 21)<((2651 + 1183) -(685 + 1005))) and (v98<=46)) then if (((8338 -4610)>=(3944 -(160 + 175))) and (v98==45)) then local v250=0 + 0 ;local v251;local v252;local v253;while true do if ((v250==((21 -(13 + 8)) -0)) or ((4405 -(257 + 614))<=(642 + 824))) then v251=0;v252=nil;v250=1973 -(992 + 980) ;end if ((v250==(105 -(84 + 20))) or ((10918 -8049)==(14799 -10045))) then v253=nil;while true do if ((v251==(145 -(92 + 52))) or (((23239 -15614) -4660)<(659 + 1649))) then v95[v252 + (2 -1) ]=v253;v95[v252]=v253[v97[11 -7 ]];break;end if (((8 + 13 + 502)<(1908 + 476)) and (v251==(0 + 0))) then local v330=0 + 0 ;while true do if (((7486 -3756)==(1213 + 2517)) and ((0 -0)==v330)) then v252=v97[1793 -(1606 + 185) ];v253=v95[v97[1 + 2 ]];v330=1 + 0 ;end if ((v330==(1 + 0)) or ((417 -(21 + 155))>(2029 -1282))) then v251=(2988 -(440 + 1105)) -(1008 + 434) ;break;end end end end break;end end else v95[v97[2]]=v95[v97[3 + 0 ]][v97[(1743 -(571 + 1150)) -(17 + 1) ]];end elseif (((2719 + 1380)>(2708 -(1648 + 233))) and (v98>47)) then v95[v97[1801 -(544 + 252 + 1003) ]]=v37[v97[2 + 1 ]];elseif (((45 + 2171)<=(9973 -6530)) and v95[v97[3 -1 ]]) then v80=v80 + 1 + 0 ;else v80=v97[9 -6 ];end v80=v80 + (1 -0) ;break;end end break;end end break;end end end end;v79=3;end end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
